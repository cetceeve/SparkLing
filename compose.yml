services:
  sparkling-kafka-bootstrap:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9094:9094" # for running the webserver locally
    #volumes:
    #  - "kafka_data:/bitnami"
    networks:
      - sparkling-bridge
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@sparkling-kafka-bootstrap:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  event-engine:
    container_name: event-engine
    image: fabianzeiher/sparkling-event-engine
    build: ./event-engine # careful, requires manual cargo build
    depends_on:
      - sparkling-kafka-bootstrap
    networks:
      - sparkling-bridge
    env_file:
      - .env
    restart: on-failure

  web:
    container_name: web-app
    image: fabianzeiher/sparkling-app
    build: ./website
    depends_on:
      - event-engine
    ports:
      - "80:8080"
    networks:
      - sparkling-bridge
    restart: on-failure

networks:
  sparkling-bridge:
    driver: bridge
