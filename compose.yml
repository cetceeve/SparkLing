services:
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    #volumes:
    #  - "kafka_data:/bitnami"
    networks:
      - sparkling-bridge
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  api-client:
    image: jonathanarns/sparkling-api-client
    build: ./api_client
    depends_on:
      - kafka
    networks:
      - sparkling-bridge
    restart: on-failure

  web:
    container_name: web-app
    image: fabianzeiher/sparkling-app
    build: ./website
    depends_on:
      - api-client
    ports:
      - "80:8080"
    networks:
      - sparkling-bridge
    restart: on-failure
  
  spark:
    image: docker.io/bitnami/spark:3.5
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '8080:8080'
      - '7077:7077'
    networks:
      - sparkling-bridge

  spark-worker:
    image: docker.io/bitnami/spark:3.5
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    networks:
      - sparkling-bridge

  spark-client:
    image: jonathanarns/sparkling-spark-client
    build: ./spark
    networks:
      - sparkling-bridge
    command: spark-submit --master spark://spark:7077 --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.0 ./frequency.py
    restart: on-failure
    depends_on:
      - spark
      - kafka

networks:
  sparkling-bridge:
    driver: bridge

# volumes:
#   kafka_data:
#     driver: local
