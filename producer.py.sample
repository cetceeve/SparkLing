from kafka import KafkaProducer
from kafka.errors import KafkaError
import json
import signal
import time

def signal_handler(signal, frame):
    global interrupted
    interrupted = True

signal.signal(signal.SIGINT, signal_handler)
interrupted = False
time.sleep(1)

producer = KafkaProducer(bootstrap_servers=["kafka:9092"],
                         value_serializer=lambda v: json.dumps(v).encode('utf-8'),
                         reconnect_backoff_max_ms=30000,
                         batch_size=25)

counter = 0
while True:
    print("sending message to kafka")
    future = producer.send("sparkling-world", {"hello": "world", "counter": counter})
    counter += 1

    try:
        record_metadata = future.get(timeout=10)
    except KafkaError:
        # Decide what to do if produce request failed...
        print("send went wrong!")
    pass

    time.sleep(1)


    if interrupted:
        print("Gotta go")
        break

